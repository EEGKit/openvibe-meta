cmake_minimum_required (VERSION 3.14)

cmake_policy(SET CMP0076 NEW)

project (lua)  # project here actually means solution in premake

# 1. lua static library
# how to rename library name?
add_library (${PROJECT_NAME} STATIC
			 src/lauxlib.h src/lua.h src/luaconf.h src/lualib.h
			 src/lapi.c src/lapi.h src/lauxlib.c src/lbaselib.c src/lcode.c src/lcode.h src/ldblib.c src/ldebug.c src/ldebug.h src/ldo.c src/ldo.h src/ldump.c src/
			 src/lfunc.c src/lfunc.h src/lgc.c src/lgc.h src/linit.c src/liolib.c src/llex.c src/llex.h src/llimits.h src/lmathlib.c src/lmem.c src/lmem.h src/loadlib.c
			 src/lobject.c src/lobject.h src/lopcodes.c src/lopcodes.h src/loslib.c src/lparser.c src/lparser.h src/lstate.c src/lstate.h src/lstring.c src/lstring.h 
			 src/lstrlib.c src/ltable.c src/ltable.h src/ltablib.c src/ltm.c src/ltm.h src/lundump.c src/lundump.h src/lvm.c src/lvm.h src/lzio.c src/lzio.h src/print.c
)

set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "src/lauxlib.h;src/lua.h;src/luaconf.h;src/lualib.h")

if(UNIX)
	set_target_properties(${PROJECT_NAME} PROPERTIES POSITION_INDEPENDENT_CODE ON)
elseif(WIN32)
    target_compile_definitions(${PROJECT_NAME} PRIVATE -D_CRT_SECURE_NO_WARNINGS )
endif()

# 2. lua interpreter
#link_directories (${LUA_BINARY_DIR})
#add_executable (lua src/lua.c)
#target_link_libraries (lua lualib)
#if(UNIX)
#        target_link_libraries( lua m )
#endif()

# 3. lua compiler
#link_directories (${LUA_BINARY_DIR})
#add_executable (luac src/luac.c)
#target_link_libraries (luac lualib)
#if(UNIX)
#        target_link_libraries( luac m )
#endif()

install(TARGETS ${PROJECT_NAME}
		PUBLIC_HEADER DESTINATION ${INSTALL_DIR}/${PROJECT_NAME}/include
		LIBRARY DESTINATION ${INSTALL_DIR}/${PROJECT_NAME}/lib
		ARCHIVE DESTINATION ${INSTALL_DIR}/${PROJECT_NAME}/lib
)
		
